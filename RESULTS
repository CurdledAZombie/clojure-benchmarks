iMac specs:

2.16 GHz Intel Core 2 Duo (2 cores)
2 GB RAM  667 MHz DDR2 SDRAM
Running Mac OS X 10.5.7

"The Computer Language Benchmarks Game" web site benchmark machine:

Quad-core 2.4Ghz Intel Q6600
4GB RAM
250GB SATA II disk drive
Ubuntu (TM) 9.04 Linux Kernel 2.6.28-11-generic


Times are real / user / sys on my iMac, with the "long" versions of
the tests, unless otherwise stated.

        |  sbcl  |  perl  |   ghc  |  java  |   clj
-----------------------------------------------------

                                                clj-8 uses mutable Java arrays
fann-   |  81.0  |    .   | 103.4  |  59.3  | 4777.7
kuch    |  80.8  |    .   | 199.1  |  69.2  | 4719.1  clj (user+sys) = 
        |   0.1  |    .   |   0.7  |   0.2  |   16.7  68 x java (user+sys)

                                                clj-9 (uses new transients)
fann-   |        |        |        |        | 5067.9
kuch    |        |        |        |        | 5030.8  clj (user+sys) = 
        |        |        |        |        |   52.3  73 x java (user+sys)

                                                clj-6 (no transients)
fann-   |        |        |        |        | 8299.9
kuch    |        |        |        |        | 8995.6  clj (user+sys) = 
        |        |        |        |        |  302.4  134 x java (user+sys)

                                                clj-3 (1 thread)
mand-   | wrong  | out of |  32.7  |  28.6  |  148.3
elbrot  | output | mem    |  59.3  |  54.4  |  152.0  clj (user+sys) = 
        |        | (?)    |   0.8  |   0.4  |    1.7  2.8 x java (user+sys)

                                                clj-3 (4 parallel threads)
mand-   |        |        |        |        |   88.0
elbrot  |        |        |        |        |  160.9  clj (user+sys) = 
        |        |        |        |        |    2.6  3.0 x java (user+sys)

                                                clj-7 (uses new transients,
                     and lots more optimizations compared to clj-5 version)
n-      |  39.3  |        |        |  25.9  |  965.2
body    |  39.1  |        |        |  25.9  |  948.7  clj (user+sys) =
        |   0.1  |        |        |   0.1  |   13.4  37 x java (user+sys)

                                                clj-5 (no transients)
n-      |        |        |        |        | 3560.2
body    |        |        |        |        | 3562.1  clj (user+sys) =
        |        |        |        |        |   34.0  138 x java (user+sys)

regex-  |        |  74.0  |        |  24.6  |   52.3
dna     |        |  73.3  |        |  40.1  |   52.9  clj (user+sys) =
        |        |   0.6  |        |   1.3  |    1.2  1.3 x java (user+sys)

                                   |            clj-8
rcomp   |   8.3  |  11.4  |  18.0  |  11.0  |   53.8			    
        |   4.8  |   7.9  |   5.0  |   3.9  |   51.3  clj (user+sys) =	    
        |   2.1  |   2.3  |   4.1  |   1.3  |    2.1  10.3 x java (user+sys)

                                                clj-6			    
rcomp   |        |        |        |        |   55.0			    
        |        |        |        |        |   74.0  clj (user+sys) =	    
        |        |        |        |        |    4.3  15.1 x java (user+sys)

                                   |            clj-7 (uses new transients)
k-nuc-  | 190.9  | 306.0  |  90.5  |  53.5  |  741.6			   
leotide | 187.9  | 302.7  | 130.8  |  91.8  |  709.1  clj (user+sys) =	   
        |   2.4  |   1.9  |   4.6  |   2.1  |   15.4  7.7 x java (user+sys)

                                                clj-6 (no transients)
k-nuc-  |        |        |        |        | 1286.4
leotide |        |        |        |        | 1118.1  clj (user+sys) =
        |        |        |        |        |   21.8  12.1 x java (user+sys)

k-nucleotide medium test, all clj, modified-pmap with specified number
of parallel threads, on my iMac (note, these are from
knucleotide.clj-5.clj, not the slightly improved knucleotide.clj-6.clj
version):
        |   1    |   2    |   3    |   4    |   5    |   6    |
        |  74.9  |  70.7  |  77.2  |  76.8  |  82.5  |  77.8  |
        | 125.9  | 122.1  | 134.6  | 134.0  | 143.4  | 134.0  |
        |   2.5  |   2.8  |   2.8  |   2.3  |   3.1  |   2.3  |


The longest few benchmark run on my iMac are:

mins benchmark test language

130   fannkuch long clj
127 mandelbrot long perl
 21       knuc long clj
  9      fasta long perl
  5 mandelbrot long clj
  5       knuc long perl
  3       knuc long sbcl
  2 mandelbrot long sbcl
  1.5     knuc long ghc
  1.3    rcomp long clj
  0.9     knuc long java



mandelbrot notes:

sbcl version implemented with threads.  I run it with only 1 thread.
I haven't debugged why it produces the wrong output yet.

perl version implemented with threads, but my Perl implementation
doesn't have threads, so I made a slight modification for a 1-thread
version that doesn't use them at all.

There are at least two versions of Java source code on shootout web
site.  I'm using the one that uses threads, not the other one that
avoids using threads.

----------------------------------------------------------------------
Hardware and software used

iMac with Intel Core 2 Duo, 2.16 GHz, 2 GB RAM, Mac OS X 10.5.7

% /opt/local/bin/sbcl --version
SBCL 1.0.24
% /opt/local/bin/perl -v

This is perl, v5.8.9 built for darwin-2level

Copyright 1987-2008, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.

% java -version
java version "1.6.0_13"
Java(TM) SE Runtime Environment (build 1.6.0_13-b03-211)
Java HotSpot(TM) 64-Bit Server VM (build 11.3-b02-83, mixed mode)

% javac -version
javac 1.6.0_13

user> (clojure-version)
"1.1.0-alpha-SNAPSHOT"

----------------------------------------------------------------------
