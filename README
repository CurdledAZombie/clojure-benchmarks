July 28, 2009

The non-Clojure versions of these benchmark programs have been
downloaded from this web site:

http://shootout.alioth.debian.org

See the file COPYING for the licenses under which these files are
distributed.

I only have Clojure implementations for these benchmarks so far:

k-nucleotide (in directory knuc)
mandelbrot

I have hacked up some shell scripts to automate the compilation and
running of some of these programs.  They have been tested on Mac OS X
10.5.7 with recent versions of the Glasgow Haskell Compiler ghc, SBCL
Common Lisp, Perl, the version of Java distributed by Apple, and a
recent version of Clojure (either 1.0.0 or more recent, I don't
recall).  See below for the steps I used to install SBCL and ghc.

You should edit the file env.sh to point at the location of your
Clojure JAR file, and perhaps give explicit path names to some of the
other language implementations, if you wish.

The k-nucleotide and reverse-complement benchmark input files are
quite large (250 Mbytes), and not included in the distribution.  They
and the expected output files must be generated by running this shell
script:

./init.sh

If you have those installed, you can run all of the implementations of
the k-nucleotide benchmark, with the quick, medium, and long test
input sizes, run these commands:

cd knuc
./batch.sh

You can also pick and choose which benchmark lengths to run, and which
language implementations to run, by giving options like these on the
command line:

./batch.sh java clj quick medium

That would run both the Clojure and Java versions of the benchmark,
each with the quick and medium size input files.  The following
command would run only the Clojure version with the long input file:

./batch.sh clj long

If you find any improvements to the Clojure versions, I'd love to hear
about them.

The file RESULTS contains some summarized execution times from running
these programs on my home iMac.  It also has copies of some of the
running times reported on the shootout web site above, which were run
on different machine (see RESULTS for some specs).


Andy Fingerhut
andy_fingerhut@alum.wustl.edu


----------------------------------------------------------------------
On a Mac OS X machine, download and install MacPorts from here:

http://www.macports.org

After following the instructions there for installing MacPorts, you
can install the Glasgow Haskell compiler with the command:

sudo port install ghc

And SBCL with the threads (i.e. multi-threading) option enabled with
this command:

sudo port install sbcl@+threads


Here are the versions I currently have installed used to produce someo
of my benchmark results:

% port installed ghc sbcl
The following ports are currently installed:
  ghc @6.10.1_8+darwin_9_i386 (active)
  sbcl @1.0.24_0+darwin_9_i386+html+test+threads (active)
