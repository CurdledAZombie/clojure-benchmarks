{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf460
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red0\green0\blue0;\red35\green80\blue171;
\red41\green97\blue20;\red74\green10\blue10;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\b\fs28 \cf2 From: 
\b0 \cf3 Parth <parth.malwankar@gmail.com>\

\b \cf2 Date: 
\b0 \cf3 June 7, 2009 9:33:21 PM PDT\

\b \cf2 To: 
\b0 \cf3 Clojure <clojure@googlegroups.com>\

\b \cf2 Subject: \cf3 Re: Threadring Benchmark\
\cf2 Reply-To: 
\b0 \cf3 clojure@googlegroups.com\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\fs24 \cf3 \
\pard\pardeftab720\ql\qnatural

\fs28 \cf3 \
So I got a chance to do some tweaks to the clojure code\
and run the benchmark. I also used the "approved" (not alternative)\
version of java code for comparison.\
I must say I am impressed with the clojure agent performance.\
\
The previous implementation results for 20,000,000 hops was:\
java: 27.14 sec, 92% cpu\
scala: 190.78 sec, 183% cpu\
clojure: 215.26 sec, 134% cpu\
\
The new results are:\
java: 33.56 sec, 94% cpu\
scala: 191.08 sec, 177% cpu\
clojure: 77.01 sec, 91% cpu\
\
The tweaks to clojure code were minor. Basically,\
coercing hops to (int hops) and using (neg? hops) instead\
of =.\
\
Detailed Log: http://gist.github.com/125614\
Updated Clojure Code: http://gist.github.com/125615\
Jave Code: http://shootout.alioth.debian.org/u32q/benchmark.php?test=threadring&lang=java&id=4\
Scala Code: http://shootout.alioth.debian.org/u32q/benchmark.php?test=threadring&lang=scala&id=1\
\
Regards,\
Parth\
\
On Jun 6, 2:39\'a0pm, Parth <parth.malwan...@gmail.com> wrote:\
\pard\pardeftab720\ql\qnatural
\cf4 On Jun 6, 11:44\'a0am, Sean Devlin <francoisdev...@gmail.com> wrote:\
\
\pard\pardeftab720\ql\qnatural
\cf5 This problem came up on the mailing list recently:\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf5 http://groups.google.com/group/clojure/browse_thread/thread/5e0c078d0...\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf5 You might want to compare your code to what was done here, but at a\
glance the implementations are similar.\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf5 You provide relative speed comparisons (Such and such is %\
better...). \'a0Would you be able to share absolute times as well? \'a0I'm\
just curious at this point.\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf5 Sean\
\pard\pardeftab720\ql\qnatural
\cf4 \
For some reason the google spreadsheet link provided in\
my original mail requires users to login for viewing.\
The same numbers are available in this published\
google spreadsheet (hopefully without login).\
\
http://tinyurl.com/ofhync\
\
Regards,\
Parth\
\
\
\
\pard\pardeftab720\ql\qnatural
\cf5 On Jun 6, 12:41\'a0am, Parth Malwankar <parth.malwan...@gmail.com> wrote:\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 Hello,\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 In order to understand the agent model of Clojure\
better I wrote the alioth shootout threadring benchmark [1].\
I ran some tests to compare it with the Java and Scala\
implementation [2, 3] which I picked from the published\
benchmarks.\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 The clojure code can be found here:http://gist.github.com/124688\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 The benchmark from my two core 1.7GHz pentium system\
(ubuntu 9.04) w/ 1GB RAM can be found here:http://spreadsheets.google.com/ccc?key=rQLD6jgTTV5OqXwHdXtrTyg\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 In summary, scala implementation is 6.34x times slower than\
java, clojure is 7.8x. Avg CPU consumption is 93.3% for java and\
179.2% and 131.34% for scala and clojure respectively.\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 I thought of sharing this in case others are interested.\
As this is my first program using clojure agents I would appreciate\
any\
comments on improving the Clojure implementation (or in case\
there are any bugs).\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 Thanks.\
Parth\
PS: For the Java implementation I happen to pick the "interesting\
alternate programs" (Java 6 -server #5) but it was already quite\
late in the cycle when I realized that. So the Java numbers are\
probably better than the other java implementations.\
\pard\pardeftab720\ql\qnatural
\cf4 \
\pard\pardeftab720\ql\qnatural
\cf6 [1]http://shootout.alioth.debian.org/u32q/benchmark.php?test=threadring&...\
[2]http://shootout.alioth.debian.org/u32q/benchmark.php?test=threadring&...\
[3]http://shootout.alioth.debian.org/u32q/benchmark.php?test=threadring&...\
\pard\pardeftab720\ql\qnatural
\cf3 --~--~---------~--~----~------------~-------~--~----~\
You received this message because you are subscribed to the Google\
Groups "Clojure" group.\
To post to this group, send email to clojure@googlegroups.com\
Note that posts from new members are moderated - please be patient with your first post.\
To unsubscribe from this group, send email to\
clojure+unsubscribe@googlegroups.com\
For more options, visit this group at\
http://groups.google.com/group/clojure?hl=en\
-~----------~----~----~----~------~----~------~--~---\
\
\
}